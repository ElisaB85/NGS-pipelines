#!/bin/bash 

#$ -o /exports/eddie/scratch/ebarbier/logfiles
#$ -e /exports/eddie/scratch/ebarbier/logfiles
#$ -pe sharedmem 4
#$ -l h_rt=12:00:00 
#$ -l h_vmem=8G
#$ -R y

#CALLING THE VARIABLES
echo $1 # Read project folder
echo $2 # name of the samples

#LOAD MODULES
. /etc/profile.d/modules.sh
module load java/jdk-22.0.1
module load roslin/trim_galore/0.6.10 
module load igmm/apps/cutadapt/4.6
module load roslin/bwa/0.7.18
module load igmm/libs/ncurses/6.0
module load igmm/libs/htslib/1.6
module load igmm/apps/samtools/1.6 
module load anaconda/2024.02
module load igmm/apps/BEDTools/2.27.1
module load roslin/fastqc/0.12.1
module load igmm/apps/bowtie/2.5.3 
module load igmm/apps/OpenJDK/17.0.11
module load igmm/apps/picard/3.1.1
module load igmm/apps/MACS2/2.2.9.1 


#CREATES FOLDERS
cd /exports/eddie/scratch/ebarbier/$1

mkdir 1_fastq
mkdir 2_fastqc_outputs
mkdir 3_trimmed_fastq
mkdir 4_aln
mkdir 5_peaks

#MOVE FASTQ FILES IN THE FIRST FOLDER and change directory
mv $2_R1.fastq.gz /exports/eddie/scratch/ebarbier/$1/1_fastq
mv $2_R2.fastq.gz /exports/eddie/scratch/ebarbier/$1/1_fastq

cd /exports/eddie/scratch/ebarbier/$1/1_fastq/

#UNZIP FASTQ FILES
gunzip $2_R1.fastq.gz
gunzip $2_R2.fastq.gz 

#PERFORMING QC OF THE SEQUENCES WITH FASTQC
fastqc $2_R1.fastq -o /exports/eddie/scratch/ebarbier/$1/2_fastqc_outputs/
fastqc $2_R2.fastq -o /exports/eddie/scratch/ebarbier/$1/2_fastqc_outputs/

#TRIMMING ADAPTERS from reads and move to folder containing trimmed fastq files
trim_galore --path_to_cutadapt cutadapt --paired -stringency 5 -length 30 -o /exports/eddie/scratch/ebarbier/$1/3_trimmed_fastq/ -q 20 $2_R1.fastq $2_R2.fastq 

cd /exports/eddie/scratch/ebarbier/$1/3_trimmed_fastq/

#UNZIP TRIMMED FILES if NECESSARY
gunzip $2_R1_val_1.fq.gz
gunzip $2_R2_val_2.fq.gz

#REPEAT PERFORMING QC of the trimmed fastq files
fastqc $2_R1_val_1.fq -o /exports/eddie/scratch/ebarbier/$1/2_fastqc_outputs/
fastqc $2_R2_val_2.fq -o /exports/eddie/scratch/ebarbier/$1/2_fastqc_outputs/

#PERFORM BWA MEM ALIGNMENT followed by compression into bam file for both MOUSE and ECOLI READS
bwa mem -t 6 /exports/csce/eddie/biology/groups/chambers/mm10/mm10_bwa_genome/mm10bwaidx $2_R1_val_1.fq $2_R2_val_2.fq | samtools view -Sb - > /exports/eddie/scratch/ebarbier/$1/4_aln/$2_mem.bam
bwa mem -t 6 /exports/csce/eddie/biology/groups/chambers/ecoli/ecoli_bwa/ecolibwaidx $2_R1_val_1.fq $2_R2_val_2.fq | samtools view -Sb - > /exports/eddie/scratch/ebarbier/$1/4_aln/$2_mem_ecoli.bam

#COMMAND TO USE BOWTIE2 INSTEAD OF BAM MEM - if bowtie is preferred to BAM MEM
bowtie2 --local --very-sensitive --no-mixed --no-discordant --phred33 -I 10 -X 700 -p 6 -x /exports/csce/eddie/biology/groups/chambers/mm10/mm10_bowtie2_genome/mm10 -1 $2_R1_val_1.fq -2 $2_R2_val_2.fq | samtools view -Sb - > /exports/eddie/scratch/ebarbier/$1/4_aln/$2_bowtie.bam

#MOVE TO THE FOLDER CONTAINING THE ALIGMENTS
cd /exports/eddie/scratch/ebarbier/$1/4_aln/

#SORT ALIGNMENTS
samtools sort -@ 8 -T $2_mem.bam -O bam -o $2_mem_srt.bam $2_mem.bam
#samtools sort -@ 8 -T $2_bowtie.bam -O bam -o $2_bowtie_srt.bam $2_bowtie.bam
samtools sort -@ 8 -T $2_mem_ecoli.bam -O bam -o $2_mem_ecoli_srt.bam $2_mem_ecoli.bam

#APPLY Q10 FILTER
samtools view -@ 8 -q 10 -b $2_mem_srt.bam > $2_mem_srt_q10.bam
#samtools view -@ 8 -q 10 -b $2_bowtie_srt.bam > $2_bowtie_srt_q10.bam
samtools view -@ 8 -q 10 -b $2_mem_ecoli_srt.bam > $2_mem_ecoli_srt_q10.bam

#REMOVE DUPLICATES WITH PICARD in both the mouse and ecoli files
java -jar $PICARD MarkDuplicates --REMOVE_DUPLICATES true --ASSUME_SORTED true -I $2_mem_srt_q10.bam -O $2_mem_srt_q10_rmDup.bam -M $2_mem_srt_q10_metrics.txt
java -jar $PICARD MarkDuplicates --REMOVE_DUPLICATES true -I $2_mem_ecoli_srt_q10.bam -O $2_mem_ecoli_srt_q10_rmDup.bam -M $2_mem_ecoli_srt_q10_metrics.txt

#RUN THE MAIN STATS FOR EACH BAM FILES GENERATED ABOVE (aka number of aligned reads) 
samtools flagstat $2_mem.bam > $2_mem.txt
samtools flagstat $2_mem_srt_q10.bam > $2_mem_srt_q10.txt
samtools flagstat $2_mem_srt_q10_rmDup.bam > $2_mem_srt_q10_rmDup.txt
#samtools flagstat $2_bowtie.bam > $2_bowtie.txt
#samtools flagstat $2_bowtie_srt_q10.bam> $2_bowtie_srt_q10.txt
samtools flagstat $2_mem_ecoli.bam > $2_mem_ecoli.txt
samtools flagstat $2_mem_ecoli_srt_q10.bam> $2_mem_ecoli_srt_q10.txt

#PEAK CALLING WITH MACS2, using BAMPE option for paired-end samples
cd /exports/eddie/scratch/ebarbier/$1/5_peaks/
macs2 callpeak -t /exports/eddie/scratch/ebarbier/$1/4_aln/$2_mem_srt_q10_rmDup.bam -f BAMPE -g mm -n $2_mem_srt_q10_rmDup_peaks -B -q 0.05

#YOU WILL GET SEVERAL OUTPUTS IN EXEL, BED AND BEDGRAPH FORMATS, SEE HERE FOR A DESCRIPTION: https://github.com/taoliu/MACS/
bedtools intersect -a $2_mem_srt_q10_rmDup_peaks_peaks.narrowPeak -b /exports/csce/eddie/biology/groups/chambers/CnR_blacklist_mm10.bed -v > $2_mem_srt_q10_rmDup_peaks_peaks_nobl.bed

#GENERATE BIGWIG
cd /exports/eddie/scratch/ebarbier/$1/4_aln/
samtools index /exports/eddie/scratch/ebarbier/$1/4_aln/$2_mem_srt_q10_rmDup.bam
conda activate python
bamCoverage --bam /exports/eddie/scratch/ebarbier/$1/4_aln/$2_mem_srt_q10_rmDup.bam --binSize 10 --normalizeUsing RPGC --effectiveGenomeSize 2652783500 --ignoreForNormalization chrX --blackListFileName /exports/csce/eddie/biology/groups/chambers/CnR_blacklist_mm10.bed -o /exports/eddie/scratch/ebarbier/$1/5_peaks/$2_mem_srt_q10_rmDup_normalized.bw 
##--exactScaling can be used to normalize to a specific number of reads/sample, to make all samples more comparable
conda deactivate

#REMOVE NON-ESSENTIAL FILES AND ZIP FASTQ FILES
rm /exports/eddie/scratch/ebarbier/$1/4_aln/$2_mem.bam
rm /exports/eddie/scratch/ebarbier/$1/4_aln/$2_mem_srt_q10.bam
rm /exports/eddie/scratch/ebarbier/$1/4_aln/$2_mem_ecoli.bam
rm /exports/eddie/scratch/ebarbier/$1/4_aln/$2_mem_ecoli_srt_q10.bam
rm /exports/eddie/scratch/ebarbier/$1/5_peaks/*.bdg
gzip /exports/eddie/scratch/ebarbier/$1/1_fastq/$2_R1.fastq
gzip /exports/eddie/scratch/ebarbier/$1/1_fastq/$2_R2.fastq
gzip /exports/eddie/scratch/ebarbier/$1/3_trimmed_fastq/$2_R1_val_1.fq 
gzip /exports/eddie/scratch/ebarbier/$1/3_trimmed_fastq/$2_R2_val_2.fq

